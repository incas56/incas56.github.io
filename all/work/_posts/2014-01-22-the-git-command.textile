---
layout: post
title: Git 常用命令总结
---

h2. {{ page.title }}

p(publish_date). 22 Jan 2014

<p></p>
<h3>Git 常用:</h3>
<pre class="terminal">
git add --all
git commit -m origin
git push origin master
</pre>
<p></p>

<h3>Git 配置:</h3>
<pre class="terminal">
git config --global user.name "incas56"
git config --global user.email "incas56@gmail.com"
git config -l
</pre>
<p></p>
<h3>Git 命令:</h3>
<pre class="terminal">
git help <command>             # 显示command的help
git show                       # 显示某次提交的内容
git add .                      # 将所有修改过的工作文件提交暂存区
git diff <file>                # 比较当前文件和暂存区文件差异
git diff <$id1> <$id2>         # 比较两次提交之间的差异
git diff <branch1>..<branch2>  # 在两个分支之间比较
git log                        # 查看提交记录
git br -d <branch>             # 删除某个分支
git br -D <branch>             # 强制删除某个分支
</pre>
<p></p>

<h3>Git 远程分支:</h3>
<pre class="terminal">
git pull                       # 抓取远程仓库所有分支更新并合并到本地
git fetch origin               # 抓取远程仓库更新
git merge <branch>             # 将branch分支合并到当前分支
git merge origin/master        # 将远程主分支合并到本地当前分支
git push origin master         # 将本地主分支推到远程主分支
git push -u origin master      # 将本地主分支推到远程(如无远程主分支则创建，
                               # 用于初始化远程仓库)
</pre>
<p></p>

<h3>Git 远程仓库:</h3>
<pre class="terminal">
git remote -v                  # 查看远程服务器地址和仓库名称
git remote add origin ssh://git@github.com/incas56/incas56.github.io.git 
git push -u origin master      # 客户端首次提交
</pre>
<p></p>

<h3>Git 命令详解:</h3>
<h4>git pull</h4>
从其他的版本库（既可以是远程的也可以是本地的）将代码更新到本地，例如：
<pre class='terminal'>git pull origin master </pre>
就是将<strong>origin</strong>这个版本库的代码更新到本地的<strong>master</strong>主枝，该功能类似于<strong>SVN</strong>的<strong>update</strong>

<h4>git add</h4>
是将当前更改或者新增的文件加入到<strong>Git</strong>的索引中，加入到<strong>Git</strong>的索引中就表示记入了版本历史中，这也是提交之前所需要执行的一步，
例如<pre class='terminal'>git add app/model/user.rb</pre>就会增加app/model/user.rb文件到<strong>Git</strong>的索引中，该功能类似于<strong>SVN</strong>的<strong>add</strong>

<h4>git rm</h4>从当前的工作空间中和索引中删除文件，例如<pre class='terminal'>git rm app/model/user.rb</pre>，该功能类似于<strong>SVN</strong>的rm、del
<h4>git commit</h4>提交当前工作空间的修改内容，类似于SVN的commit命令，例如<pre class='terminal'>git commit -m story #3, add user model</pre>，提交的时候必须用-m来输入一条提交信息，该功能类似于SVN的commit
<h4>git push</h4>将本地commit的代码更新到远程版本库中，例如<pre class='terminal'>git push origin</pre>就会将本地的代码更新到名为orgin的远程版本库中
<h4>git log</h4>查看历史日志，该功能类似于SVN的log
<h4>git revert</h4>还原一个版本的修改，必须提供一个具体的Git版本号，例如<pre class='terminal'>git revert bbaf6fb5060b4875b18ff9ff637ce118256d6f20</pre>，Git的版本号都是生成的一个哈希值



